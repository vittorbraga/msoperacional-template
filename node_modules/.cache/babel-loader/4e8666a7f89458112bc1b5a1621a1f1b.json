{"remainingRequest":"/Volumes/Extreme SSD/carzen_group/MS Operacional/msoperacional-template/node_modules/babel-loader/lib/index.js!/Volumes/Extreme SSD/carzen_group/MS Operacional/msoperacional-template/node_modules/vuetify/lib/mixins/elevatable/index.js","dependencies":[{"path":"/Volumes/Extreme SSD/carzen_group/MS Operacional/msoperacional-template/node_modules/vuetify/lib/mixins/elevatable/index.js","mtime":1648720695890},{"path":"/Volumes/Extreme SSD/carzen_group/MS Operacional/msoperacional-template/babel.config.js","mtime":1648720161780},{"path":"/Volumes/Extreme SSD/carzen_group/MS Operacional/msoperacional-template/node_modules/cache-loader/dist/cjs.js","mtime":1648720667630},{"path":"/Volumes/Extreme SSD/carzen_group/MS Operacional/msoperacional-template/node_modules/babel-loader/lib/index.js","mtime":1648720673840}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVm9sdW1lcy9FeHRyZW1lIFNTRC9jYXJ6ZW5fZ3JvdXAvTVMgT3BlcmFjaW9uYWwvbXNvcGVyYWNpb25hbC10ZW1wbGF0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmV4cG9ydCBkZWZhdWx0IFZ1ZS5leHRlbmQoewogIG5hbWU6ICdlbGV2YXRhYmxlJywKICBwcm9wczogewogICAgZWxldmF0aW9uOiBbTnVtYmVyLCBTdHJpbmddCiAgfSwKICBjb21wdXRlZDogewogICAgY29tcHV0ZWRFbGV2YXRpb246IGZ1bmN0aW9uIGNvbXB1dGVkRWxldmF0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy5lbGV2YXRpb247CiAgICB9LAogICAgZWxldmF0aW9uQ2xhc3NlczogZnVuY3Rpb24gZWxldmF0aW9uQ2xhc3NlcygpIHsKICAgICAgdmFyIGVsZXZhdGlvbiA9IHRoaXMuY29tcHV0ZWRFbGV2YXRpb247CiAgICAgIGlmIChlbGV2YXRpb24gPT0gbnVsbCkgcmV0dXJuIHt9OwogICAgICBpZiAoaXNOYU4ocGFyc2VJbnQoZWxldmF0aW9uKSkpIHJldHVybiB7fTsKICAgICAgcmV0dXJuIF9kZWZpbmVQcm9wZXJ0eSh7fSwgImVsZXZhdGlvbi0iLmNvbmNhdCh0aGlzLmVsZXZhdGlvbiksIHRydWUpOwogICAgfQogIH0KfSk7"},{"version":3,"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,eAAeA,GAAG,CAACC,MAAJ,CAAW;AACxBC,MAAI,EAAE,YADkB;AAGxBC,OAAK,EAAE;AACLC,aAAS,EAAE,CAACC,MAAD,EAASC,MAAT;AADN,GAHiB;AAOxBC,UAAQ,EAAE;AACRC,qBADQ,+BACS;AACf,aAAO,KAAKJ,SAAZ;AAFM;AAIRK,oBAJQ,8BAIQ;AACd,UAAML,SAAS,GAAG,KAAKI,iBAAvB;AAEA,UAAIJ,SAAS,IAAI,IAAjB,EAAuB,OAAO,EAAP;AACvB,UAAIM,KAAK,CAACC,QAAQ,CAACP,SAAD,CAAT,CAAT,EAAgC,OAAO,EAAP;AAChC,qDAAuB,KAAKA,SAA5B,GAA0C,IAA1C;AACD;AAVO;AAPc,CAAX,CAAf","names":["Vue","extend","name","props","elevation","Number","String","computed","computedElevation","elevationClasses","isNaN","parseInt"],"sourceRoot":"","sources":["../../../src/mixins/elevatable/index.ts"],"sourcesContent":["import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'elevatable',\n\n  props: {\n    elevation: [Number, String],\n  },\n\n  computed: {\n    computedElevation (): string | number | undefined {\n      return this.elevation\n    },\n    elevationClasses (): Record<string, boolean> {\n      const elevation = this.computedElevation\n\n      if (elevation == null) return {}\n      if (isNaN(parseInt(elevation))) return {}\n      return { [`elevation-${this.elevation}`]: true }\n    },\n  },\n})\n"]}]}